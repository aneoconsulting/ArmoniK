name: DeployTest

on:
  push:
    branches: [ '**' ]
    tags-ignore: [ '**' ]

jobs:
  versionning:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    outputs:
      version: ${{ steps.genver.outputs.version }}
    steps:
      - name: Get type of VM
        run: |
          lscpu
          uname -a
          grep MemTotal /proc/meminfo

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Generate Version
        id: genver
        run: |
          VERSION=$(docker run --rm -v $(pwd):/repo codacy/git-version /bin/git-version --folder=/repo --release-branch=release --dev-branch=main)
          echo "::set-output name=version::$VERSION"
          echo $VERSION

  coreStreamWithoutIngress:
    runs-on: ubuntu-latest
    steps:
      - name: Get type of VM
        run: |
          lscpu
          uname -a
          grep MemTotal /proc/meminfo

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release jq python3 python-is-python3 python3-pip
          pip install awscli

      - name: Get Core Tag
        id: core
        run: |
          TAG=$(grep "core" armonik-versions.txt | tail -1 | cut -d "=" -f 2)
          echo "::set-output name=tag::$TAG"

      - uses: ./
        name: Deploy infrastructure
        id: deploy-infra
        with:
          metrics-exporter-image: dockerhubaneo/armonik_control_metrics
          control-plane-image: dockerhubaneo/armonik_control
          polling-agent-image: dockerhubaneo/armonik_pollingagent
          worker-image: dockerhubaneo/armonik_core_stream_test_worker
          core-tag: ${{ steps.core.outputs.tag }}
          worker-tag: ${{ steps.core.outputs.tag }}

      - name: Test Core Stream
        shell: bash
        run: |
          set -ex
          export CONTROL_PLANE_URL=$(cat infrastructure/quick-deploy/localhost/armonik/generated/armonik-output.json | jq -r '.armonik.control_plane_url')
          docker run --rm \
            -e GrpcClient__Endpoint="${CONTROL_PLANE_URL}" \
            dockerhubaneo/armonik_core_stream_test_client:${{ steps.core.outputs.tag }}

      - name: Show logs
        if: always()
        run: |
          set -e
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          mkdir -p core-stream-without-ingress
          sudo cp -rL /var/log/pods/armonik_* core-stream-without-ingress
          sudo chown $USER -R core-stream-without-ingress
          tar -czf core-stream-without-ingress.tar.gz core-stream-without-ingress
          aws s3 cp core-stream-without-ingress.tar.gz s3://${{ secrets.AWS_LOG_BUCKET_NAME }}/armonik-pipeline/${{ github.run_number }}/${{ github.run_attempt }}/core-stream-without-ingress.tar.gz