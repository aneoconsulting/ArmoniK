name: "Deploy and Test AWS"

on:
  workflow_dispatch:
    inputs:
      prefix:
        description: "Prefix for the deployment"
        required: false
        default: "armonik-cicd"
      core-version:
        description: "Version of core to deploy"
        required: false
        default: ""
      gui-version:
        description: "Version of gui to deploy"
        required: false
        default: ""
      ext-csharp-version:
        description: "Version of Extension Csharp to deploy"
        required: false
        default: ""
      tls:
        description: "Enable TLS"
        type: boolean
        required: false
        default: false
      mtls:
        description: "Enable mTLS"
        type: boolean
        required: false
        default: false
  push:
    branches: [ main ]
    tags-ignore: [ '**' ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    outputs:
      terraform-output: ${{ steps.deploy.outputs.terraform-output }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        uses: aneoconsulting/ArmoniK.Action.Deploy/dependencies@fl/test
        with:
          aws: true
          terraform: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: deploy
        name: Deploy
        uses: aneoconsulting/ArmoniK.Action.Deploy/deploy@fl/test
        with:
          type: aws
          prefix: ${{ inputs.prefix }}
          core-version: ${{ inputs.core-version }}
          gui-version: ${{ inputs.gui-version }}
          ext-csharp-version: ${{ inputs.ext-csharp-version }}
          tls: ${{ inputs.tls }}
          mtls: ${{ inputs.mtls }}

  test:
    name: "Test"
    runs-on: ubuntu-latest
    needs: deploy
    env:
      TERRAFORM_OUTPUT: ${{ needs.deploy.outputs.terraform-output }}
      KUBE_CONFIG: ${{ needs.deploy.outputs.kube-config }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        uses: aneoconsulting/ArmoniK.Action.Deploy/dependencies@fl/test
        with:
          aws: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Terraform Output
        run: |
          echo "$TERRAFORM_OUTPUT"
      - name: Kube Config
        run: |
          echo "$KUBE_CONFIG"

  cleanup:
    name: "Destroy"
    runs-on: ubuntu-latest
    needs:
      - deploy
      - test
    if: "always()"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        uses: aneoconsulting/ArmoniK.Action.Deploy/dependencies@fl/test
        with:
          aws: true
          terraform: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: destroy
        name: Destroy deployment
        uses: aneoconsulting/ArmoniK.Action.Deploy/destroy@fl/test
        with:
          type: aws
          prefix: ${{ inputs.prefix }}
